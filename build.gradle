plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.30'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

//more flexible method of adding a plugin to your build.
apply plugin: 'java'
apply plugin: 'kotlin' // Required for Kotlin integration

group 'com.home.growing'
jar {
    baseName = 'autowatering'
    version = '0.0.1'
}

def mainVerticleName = 'com.home.autowatering.Application'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

shadowJar {
    baseName = 'autowatering'
    version = '0.0.1'
    classifier = 'shadow'
    manifest {
        attributes 'Main-Verticle': mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

ext {
    kotlinVersion = '1.3.50'
    vertxVersion = '3.7.0'
    junitVersion = '5.4.0'
    jacksonVersion = '2.10.0'
}

application {
    mainClassName = 'io.vertx.core.Launcher'
}

dependencies {
    //kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion" // Required for Kotlin integration
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1"
    compile "org.jetbrains.exposed:exposed:0.10.4"

    //database
    compile group: 'org.liquibase', name: 'liquibase-core', version: '3.8.0'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.4.1'

    //postgres
    runtime('org.postgresql:postgresql:42.2.2')
    compile group: 'com.opentable.components', name: 'otj-pg-embedded', version: '0.12.0'

    //if it is running on java 11
    compile('javax.xml.bind:jaxb-api:2.3.0')
    compile('javax.activation:activation:1.1')
    compile('org.glassfish.jaxb:jaxb-runtime:2.3.0')

    //vert.x
    compile "io.vertx:vertx-core:$vertxVersion"
    compile "io.vertx:vertx-lang-kotlin:$vertxVersion"
    compile "io.vertx:vertx-web:$vertxVersion"
    compile "io.vertx:vertx-web-client:$vertxVersion"
    compile "io.vertx:vertx-config:$vertxVersion"
    compile "io.vertx:vertx-jdbc-client:$vertxVersion"
//    compile group: 'io.vertx', name: 'vertx-rx-java2', version: '3.8.3'

    //jackson
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"

    //other
    compile('commons-lang:commons-lang:2.6')
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.25'

    //tests
    testImplementation("io.vertx:vertx-junit5:$vertxVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testImplementation(group: 'com.nhaarman.mockitokotlin2', name: 'mockito-kotlin', version: '2.0.0')
    testImplementation("org.assertj:assertj-core:3.13.2")
    testImplementation("com.jayway.restassured:rest-assured:2.4.0")

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
//    main.java.srcDirs += 'src/main/java'
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.resources.srcDirs = ['src/main/resources']
}




test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}



